# From https://github.com/kaust-vislab/python-data-science-project
FROM ubuntu:20.04

LABEL maintainer="Sam Horsfield <shorsfield@ebi.ac.uk>"

SHELL [ "/bin/bash", "--login", "-c" ]

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 curl git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user
ARG username=celebrimbor-usr
ARG uid=1000
ARG gid=100
ENV USER $username
ENV UID $uid
ENV GID $gid
ENV HOME /home/$USER

RUN adduser --disabled-password \
    --gecos "Non-root user" \
    --uid $UID \
    --gid $GID \
    --home $HOME \
    $USER

COPY environment.yml /tmp/
RUN chown $UID:$GID /tmp/environment.yml
COPY environment_checkm2.yml /tmp/
RUN chown $UID:$GID /tmp/environment_checkm2.yml

COPY docker/entrypoint.sh /usr/local/bin/
RUN chown $UID:$GID /usr/local/bin/entrypoint.sh && \
    chmod u+x /usr/local/bin/entrypoint.sh

USER $USER

# install miniconda
ENV MINICONDA_VERSION latest
ENV CONDA_DIR $HOME/miniconda3
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-$MINICONDA_VERSION-Linux-x86_64.sh -O ~/miniconda.sh && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p $CONDA_DIR && \
    rm ~/miniconda.sh

# make non-activate conda commands available
ENV PATH=$CONDA_DIR/bin:$PATH

# make conda activate command available from /bin/bash --login shells
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> ~/.profile

# make conda activate command available from /bin/bash --interative shells
RUN conda init bash

# create a project directory inside user home
# (this isn't used with a clone running snakemake)
ENV PROJECT_DIR $HOME/app
RUN mkdir $PROJECT_DIR
# copy the code in
COPY . $PROJECT_DIR
WORKDIR $PROJECT_DIR

# build the conda environment
ENV ENV_PREFIX $PROJECT_DIR
RUN conda update --name base --channel defaults conda && \
    conda env create --prefix $ENV_PREFIX/celebrimbor --file /tmp/environment.yml --yes && \
    conda clean --all --yes && \
    conda activate $ENV_PREFIX/celebrimbor && \
    cargo install cgt_bacpop && \
    mkdir bakta_db && \ 
    bakta_db download --output bakta_db --type light && \
    conda deactivate && \
    conda env create --prefix $ENV_PREFIX/checkm2 --file /tmp/environment_checkm2.yml --yes && \
    conda activate $ENV_PREFIX/checkm2 && \
    checkm2 database --download --path checkm2_db && \
    conda deactivate

# add rust binary to path
ENV PATH="$HOME/.cargo/bin:${PATH}"

# use an entrypoint script to insure conda environment is properly activated at runtime
USER root
ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]

# default of running shell is fine
#CMD [ "bash" ]